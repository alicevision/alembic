language: cpp
dist: trusty


addons:
  apt:
    sources:
      - llvm-toolchain-trusty
      - ubuntu-toolchain-r-test
    packages:
      - clang-3.8
      - g++-5
      - zlib1g-dev
      - libhdf5-dev

matrix:
  include:
    - compiler: gcc
      env: CXX_COMPILER=g++ C_COMPILER=gcc TOOLSET=gcc WITH_HDF5=ON BUILD_SHARED=OFF
    - compiler: gcc
      env: CXX_COMPILER=g++ C_COMPILER=gcc TOOLSET=gcc WITH_HDF5=OFF BUILD_SHARED=ON
    - compiler: gcc
      env: CXX_COMPILER=g++-5 C_COMPILER=gcc-5 TOOLSET=gcc WITH_HDF5=ON BUILD_SHARED=OFF
    - compiler: gcc
      env: CXX_COMPILER=g++-5 C_COMPILER=gcc-5 TOOLSET=gcc WITH_HDF5=OFF BUILD_SHARED=ON
    - compiler: clang
      env: CXX_COMPILER=clang++ C_COMPILER=clang TOOLSET=clang WITH_HDF5=OFF BUILD_SHARED=OFF
    - compiler: clang
      env: CXX_COMPILER=clang++ C_COMPILER=clang TOOLSET=clang WITH_HDF5=ON BUILD_SHARED=ON
    - compiler: clang
      env: CXX_COMPILER=clang++-3.8 C_COMPILER=clang-3.8 TOOLSET=clang WITH_HDF5=OFF BUILD_SHARED=OFF
    - compiler: clang
      env: CXX_COMPILER=clang++-3.8 C_COMPILER=clang-3.8 TOOLSET=clang WITH_HDF5=ON BUILD_SHARED=ON

env:
  global:
    - NUM_CPU="`grep processor /proc/cpuinfo | wc -l`"; echo $NUM_CPU
    - BUILD_TYPE="RELEASE"
    - ALEMBIC_SOURCE=${TRAVIS_BUILD_DIR}
    - ALEMBIC_BUILD=${TRAVIS_BUILD_DIR}/build
    - ALEMBIC_INSTALL=${ALEMBIC_BUILD}/install
    - ALEMBIC_BUILD_STATIC=${TRAVIS_BUILD_DIR}/buildStatic
    - ALEMBIC_INSTALL_STATIC=${ALEMBIC_BUILD_STATIC}/install
    # OPENEXR
    - OPENEXR_ROOT=${HOME}/openexr
    - OPENEXR_SOURCE=${OPENEXR_ROOT}/source
    - ILMBASE_BUILD=${OPENEXR_ROOT}/IlmBasebuild
    - OPENEXR_INSTALL=${OPENEXR_ROOT}/install
    # CMAKE
    - CMAKE_URL="https://cmake.org/files/v3.4/cmake-3.4.1-Linux-x86_64.tar.gz"
    - CMAKE_ROOT=${HOME}/cmake
    - CMAKE_SOURCE=${CMAKE_ROOT}/source
    - CMAKE_INSTALL=${CMAKE_ROOT}/install

before_install:
 # CMAKE download and install
 - >
    if [ "$(ls -A ${CMAKE_INSTALL})" ]; then
      echo "CMake found in cache.";
    else
      mkdir --parent ${CMAKE_SOURCE}
      mkdir --parent ${CMAKE_INSTALL}
      travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${CMAKE_INSTALL}
    fi
 - export PATH=${CMAKE_INSTALL}/bin:${PATH};
 - cmake --version
 # OPENEXR
 - >
    if [ "$(ls -A $OPENEXR_INSTALL)" ]; then
      echo "OpenEXR found in cache.";
    else
      ls -A $OPENEXR_INSTALL
      mkdir --parent $OPENEXR_SOURCE
      mkdir --parent $ILMBASE_BUILD
      mkdir --parent $OPENEXR_INSTALL
      travis_retry wget https://github.com/openexr/openexr/archive/v2.2.0.tar.gz;
      tar -xf v2.2.0.tar.gz;
      mv openexr-2.2.0/* $OPENEXR_SOURCE;
    fi

install:
  # OPENEXR only IlmBase is required
  - >
     if [ ! "$(ls -A $OPENEXR_INSTALL)" ]; then
       cd $ILMBASE_BUILD
       cmake \
         -DCMAKE_INSTALL_PREFIX=$OPENEXR_INSTALL \
         $OPENEXR_SOURCE/IlmBase;
       make -j 2 > null;
       make install;
     fi

before_script:
  # Create build folder
  - mkdir --parent $ALEMBIC_BUILD
  - cd $ALEMBIC_BUILD
  # if clang, get rid of the annoying warning about register
  - >
     if [[ $C_COMPILER == *"clang"* ]]; then
       ADD_FLAG="-Wno-deprecated-register"
     fi
  # Classic release build
  - >
     cmake $ALEMBIC_SOURCE \
        -DCMAKE_CXX_COMPILER=$CXX_COMPILER \
        -DCMAKE_C_COMPILER=$C_COMPILER \
        -DCMAKE_CXX_FLAGS=$ADD_FLAG \
        -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
        -DCMAKE_INSTALL_PREFIX:PATH=$ALEMBIC_INSTALL \
        -DILMBASE_ROOT:PATH=$OPENEXR_INSTALL\
        -DALEMBIC_SHARED_LIBS:BOOL=ON \
        -DUSE_HDF5:BOOL=${WITH_HDF5};
script:
# limit GCC builds to a reduced number of thread for the virtual machine
  - make install -j 2 VERBOSE=1
# Perform unit tests
  - make test
  # Create build folder
  - mkdir --parent ${ALEMBIC_BUILD_STATIC}
  - cd ${ALEMBIC_BUILD_STATIC}
  # Classic release build
  - >
     cmake $ALEMBIC_SOURCE \
        -DCMAKE_CXX_COMPILER=$CXX_COMPILER \
        -DCMAKE_C_COMPILER=$C_COMPILER \
        -DCMAKE_CXX_FLAGS=$ADD_FLAG \
        -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
        -DCMAKE_INSTALL_PREFIX:PATH=$ALEMBIC_INSTALL_STATIC \
        -DILMBASE_ROOT:PATH=$OPENEXR_INSTALL\
        -DALEMBIC_SHARED_LIBS:BOOL=OFF \
        -DUSE_HDF5:BOOL=${WITH_HDF5};
  - make install -j 2 VERBOSE=1
  - make test

cache:
  apt: true
  directories:
    - $OPENEXR_INSTALL
    - $CMAKE_INSTALL
